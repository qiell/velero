// Code generated by protoc-gen-go. DO NOT EDIT.
// source: BlockStore.proto

package generated

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateVolumeRequest struct {
	Plugin               string   `protobuf:"bytes,1,opt,name=plugin,proto3" json:"plugin,omitempty"`
	SnapshotID           string   `protobuf:"bytes,2,opt,name=snapshotID,proto3" json:"snapshotID,omitempty"`
	VolumeType           string   `protobuf:"bytes,3,opt,name=volumeType,proto3" json:"volumeType,omitempty"`
	VolumeAZ             string   `protobuf:"bytes,4,opt,name=volumeAZ,proto3" json:"volumeAZ,omitempty"`
	Iops                 int64    `protobuf:"varint,5,opt,name=iops,proto3" json:"iops,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateVolumeRequest) Reset()         { *m = CreateVolumeRequest{} }
func (m *CreateVolumeRequest) String() string { return proto.CompactTextString(m) }
func (*CreateVolumeRequest) ProtoMessage()    {}
func (*CreateVolumeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_BlockStore_6f92edac81fcc1c8, []int{0}
}
func (m *CreateVolumeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateVolumeRequest.Unmarshal(m, b)
}
func (m *CreateVolumeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateVolumeRequest.Marshal(b, m, deterministic)
}
func (dst *CreateVolumeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVolumeRequest.Merge(dst, src)
}
func (m *CreateVolumeRequest) XXX_Size() int {
	return xxx_messageInfo_CreateVolumeRequest.Size(m)
}
func (m *CreateVolumeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVolumeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVolumeRequest proto.InternalMessageInfo

func (m *CreateVolumeRequest) GetPlugin() string {
	if m != nil {
		return m.Plugin
	}
	return ""
}

func (m *CreateVolumeRequest) GetSnapshotID() string {
	if m != nil {
		return m.SnapshotID
	}
	return ""
}

func (m *CreateVolumeRequest) GetVolumeType() string {
	if m != nil {
		return m.VolumeType
	}
	return ""
}

func (m *CreateVolumeRequest) GetVolumeAZ() string {
	if m != nil {
		return m.VolumeAZ
	}
	return ""
}

func (m *CreateVolumeRequest) GetIops() int64 {
	if m != nil {
		return m.Iops
	}
	return 0
}

type CreateVolumeResponse struct {
	VolumeID             string   `protobuf:"bytes,1,opt,name=volumeID,proto3" json:"volumeID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateVolumeResponse) Reset()         { *m = CreateVolumeResponse{} }
func (m *CreateVolumeResponse) String() string { return proto.CompactTextString(m) }
func (*CreateVolumeResponse) ProtoMessage()    {}
func (*CreateVolumeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_BlockStore_6f92edac81fcc1c8, []int{1}
}
func (m *CreateVolumeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateVolumeResponse.Unmarshal(m, b)
}
func (m *CreateVolumeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateVolumeResponse.Marshal(b, m, deterministic)
}
func (dst *CreateVolumeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVolumeResponse.Merge(dst, src)
}
func (m *CreateVolumeResponse) XXX_Size() int {
	return xxx_messageInfo_CreateVolumeResponse.Size(m)
}
func (m *CreateVolumeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVolumeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVolumeResponse proto.InternalMessageInfo

func (m *CreateVolumeResponse) GetVolumeID() string {
	if m != nil {
		return m.VolumeID
	}
	return ""
}

type GetVolumeInfoRequest struct {
	Plugin               string   `protobuf:"bytes,1,opt,name=plugin,proto3" json:"plugin,omitempty"`
	VolumeID             string   `protobuf:"bytes,2,opt,name=volumeID,proto3" json:"volumeID,omitempty"`
	VolumeAZ             string   `protobuf:"bytes,3,opt,name=volumeAZ,proto3" json:"volumeAZ,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVolumeInfoRequest) Reset()         { *m = GetVolumeInfoRequest{} }
func (m *GetVolumeInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetVolumeInfoRequest) ProtoMessage()    {}
func (*GetVolumeInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_BlockStore_6f92edac81fcc1c8, []int{2}
}
func (m *GetVolumeInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVolumeInfoRequest.Unmarshal(m, b)
}
func (m *GetVolumeInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVolumeInfoRequest.Marshal(b, m, deterministic)
}
func (dst *GetVolumeInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVolumeInfoRequest.Merge(dst, src)
}
func (m *GetVolumeInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetVolumeInfoRequest.Size(m)
}
func (m *GetVolumeInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVolumeInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVolumeInfoRequest proto.InternalMessageInfo

func (m *GetVolumeInfoRequest) GetPlugin() string {
	if m != nil {
		return m.Plugin
	}
	return ""
}

func (m *GetVolumeInfoRequest) GetVolumeID() string {
	if m != nil {
		return m.VolumeID
	}
	return ""
}

func (m *GetVolumeInfoRequest) GetVolumeAZ() string {
	if m != nil {
		return m.VolumeAZ
	}
	return ""
}

type GetVolumeInfoResponse struct {
	VolumeType           string   `protobuf:"bytes,1,opt,name=volumeType,proto3" json:"volumeType,omitempty"`
	Iops                 int64    `protobuf:"varint,2,opt,name=iops,proto3" json:"iops,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVolumeInfoResponse) Reset()         { *m = GetVolumeInfoResponse{} }
func (m *GetVolumeInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetVolumeInfoResponse) ProtoMessage()    {}
func (*GetVolumeInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_BlockStore_6f92edac81fcc1c8, []int{3}
}
func (m *GetVolumeInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVolumeInfoResponse.Unmarshal(m, b)
}
func (m *GetVolumeInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVolumeInfoResponse.Marshal(b, m, deterministic)
}
func (dst *GetVolumeInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVolumeInfoResponse.Merge(dst, src)
}
func (m *GetVolumeInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetVolumeInfoResponse.Size(m)
}
func (m *GetVolumeInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVolumeInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetVolumeInfoResponse proto.InternalMessageInfo

func (m *GetVolumeInfoResponse) GetVolumeType() string {
	if m != nil {
		return m.VolumeType
	}
	return ""
}

func (m *GetVolumeInfoResponse) GetIops() int64 {
	if m != nil {
		return m.Iops
	}
	return 0
}

type CreateSnapshotRequest struct {
	Plugin               string            `protobuf:"bytes,1,opt,name=plugin,proto3" json:"plugin,omitempty"`
	VolumeID             string            `protobuf:"bytes,2,opt,name=volumeID,proto3" json:"volumeID,omitempty"`
	VolumeAZ             string            `protobuf:"bytes,3,opt,name=volumeAZ,proto3" json:"volumeAZ,omitempty"`
	Tags                 map[string]string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CreateSnapshotRequest) Reset()         { *m = CreateSnapshotRequest{} }
func (m *CreateSnapshotRequest) String() string { return proto.CompactTextString(m) }
func (*CreateSnapshotRequest) ProtoMessage()    {}
func (*CreateSnapshotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_BlockStore_6f92edac81fcc1c8, []int{4}
}
func (m *CreateSnapshotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSnapshotRequest.Unmarshal(m, b)
}
func (m *CreateSnapshotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSnapshotRequest.Marshal(b, m, deterministic)
}
func (dst *CreateSnapshotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSnapshotRequest.Merge(dst, src)
}
func (m *CreateSnapshotRequest) XXX_Size() int {
	return xxx_messageInfo_CreateSnapshotRequest.Size(m)
}
func (m *CreateSnapshotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSnapshotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSnapshotRequest proto.InternalMessageInfo

func (m *CreateSnapshotRequest) GetPlugin() string {
	if m != nil {
		return m.Plugin
	}
	return ""
}

func (m *CreateSnapshotRequest) GetVolumeID() string {
	if m != nil {
		return m.VolumeID
	}
	return ""
}

func (m *CreateSnapshotRequest) GetVolumeAZ() string {
	if m != nil {
		return m.VolumeAZ
	}
	return ""
}

func (m *CreateSnapshotRequest) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type CreateSnapshotResponse struct {
	SnapshotID           string   `protobuf:"bytes,1,opt,name=snapshotID,proto3" json:"snapshotID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateSnapshotResponse) Reset()         { *m = CreateSnapshotResponse{} }
func (m *CreateSnapshotResponse) String() string { return proto.CompactTextString(m) }
func (*CreateSnapshotResponse) ProtoMessage()    {}
func (*CreateSnapshotResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_BlockStore_6f92edac81fcc1c8, []int{5}
}
func (m *CreateSnapshotResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSnapshotResponse.Unmarshal(m, b)
}
func (m *CreateSnapshotResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSnapshotResponse.Marshal(b, m, deterministic)
}
func (dst *CreateSnapshotResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSnapshotResponse.Merge(dst, src)
}
func (m *CreateSnapshotResponse) XXX_Size() int {
	return xxx_messageInfo_CreateSnapshotResponse.Size(m)
}
func (m *CreateSnapshotResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSnapshotResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSnapshotResponse proto.InternalMessageInfo

func (m *CreateSnapshotResponse) GetSnapshotID() string {
	if m != nil {
		return m.SnapshotID
	}
	return ""
}

type DeleteSnapshotRequest struct {
	Plugin               string   `protobuf:"bytes,1,opt,name=plugin,proto3" json:"plugin,omitempty"`
	SnapshotID           string   `protobuf:"bytes,2,opt,name=snapshotID,proto3" json:"snapshotID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteSnapshotRequest) Reset()         { *m = DeleteSnapshotRequest{} }
func (m *DeleteSnapshotRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteSnapshotRequest) ProtoMessage()    {}
func (*DeleteSnapshotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_BlockStore_6f92edac81fcc1c8, []int{6}
}
func (m *DeleteSnapshotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteSnapshotRequest.Unmarshal(m, b)
}
func (m *DeleteSnapshotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteSnapshotRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteSnapshotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteSnapshotRequest.Merge(dst, src)
}
func (m *DeleteSnapshotRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteSnapshotRequest.Size(m)
}
func (m *DeleteSnapshotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteSnapshotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteSnapshotRequest proto.InternalMessageInfo

func (m *DeleteSnapshotRequest) GetPlugin() string {
	if m != nil {
		return m.Plugin
	}
	return ""
}

func (m *DeleteSnapshotRequest) GetSnapshotID() string {
	if m != nil {
		return m.SnapshotID
	}
	return ""
}

type GetVolumeIDRequest struct {
	Plugin               string   `protobuf:"bytes,1,opt,name=plugin,proto3" json:"plugin,omitempty"`
	PersistentVolume     []byte   `protobuf:"bytes,2,opt,name=persistentVolume,proto3" json:"persistentVolume,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVolumeIDRequest) Reset()         { *m = GetVolumeIDRequest{} }
func (m *GetVolumeIDRequest) String() string { return proto.CompactTextString(m) }
func (*GetVolumeIDRequest) ProtoMessage()    {}
func (*GetVolumeIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_BlockStore_6f92edac81fcc1c8, []int{7}
}
func (m *GetVolumeIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVolumeIDRequest.Unmarshal(m, b)
}
func (m *GetVolumeIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVolumeIDRequest.Marshal(b, m, deterministic)
}
func (dst *GetVolumeIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVolumeIDRequest.Merge(dst, src)
}
func (m *GetVolumeIDRequest) XXX_Size() int {
	return xxx_messageInfo_GetVolumeIDRequest.Size(m)
}
func (m *GetVolumeIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVolumeIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVolumeIDRequest proto.InternalMessageInfo

func (m *GetVolumeIDRequest) GetPlugin() string {
	if m != nil {
		return m.Plugin
	}
	return ""
}

func (m *GetVolumeIDRequest) GetPersistentVolume() []byte {
	if m != nil {
		return m.PersistentVolume
	}
	return nil
}

type GetVolumeIDResponse struct {
	VolumeID             string   `protobuf:"bytes,1,opt,name=volumeID,proto3" json:"volumeID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVolumeIDResponse) Reset()         { *m = GetVolumeIDResponse{} }
func (m *GetVolumeIDResponse) String() string { return proto.CompactTextString(m) }
func (*GetVolumeIDResponse) ProtoMessage()    {}
func (*GetVolumeIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_BlockStore_6f92edac81fcc1c8, []int{8}
}
func (m *GetVolumeIDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVolumeIDResponse.Unmarshal(m, b)
}
func (m *GetVolumeIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVolumeIDResponse.Marshal(b, m, deterministic)
}
func (dst *GetVolumeIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVolumeIDResponse.Merge(dst, src)
}
func (m *GetVolumeIDResponse) XXX_Size() int {
	return xxx_messageInfo_GetVolumeIDResponse.Size(m)
}
func (m *GetVolumeIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVolumeIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetVolumeIDResponse proto.InternalMessageInfo

func (m *GetVolumeIDResponse) GetVolumeID() string {
	if m != nil {
		return m.VolumeID
	}
	return ""
}

type SetVolumeIDRequest struct {
	Plugin               string   `protobuf:"bytes,1,opt,name=plugin,proto3" json:"plugin,omitempty"`
	PersistentVolume     []byte   `protobuf:"bytes,2,opt,name=persistentVolume,proto3" json:"persistentVolume,omitempty"`
	VolumeID             string   `protobuf:"bytes,3,opt,name=volumeID,proto3" json:"volumeID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetVolumeIDRequest) Reset()         { *m = SetVolumeIDRequest{} }
func (m *SetVolumeIDRequest) String() string { return proto.CompactTextString(m) }
func (*SetVolumeIDRequest) ProtoMessage()    {}
func (*SetVolumeIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_BlockStore_6f92edac81fcc1c8, []int{9}
}
func (m *SetVolumeIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetVolumeIDRequest.Unmarshal(m, b)
}
func (m *SetVolumeIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetVolumeIDRequest.Marshal(b, m, deterministic)
}
func (dst *SetVolumeIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetVolumeIDRequest.Merge(dst, src)
}
func (m *SetVolumeIDRequest) XXX_Size() int {
	return xxx_messageInfo_SetVolumeIDRequest.Size(m)
}
func (m *SetVolumeIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetVolumeIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetVolumeIDRequest proto.InternalMessageInfo

func (m *SetVolumeIDRequest) GetPlugin() string {
	if m != nil {
		return m.Plugin
	}
	return ""
}

func (m *SetVolumeIDRequest) GetPersistentVolume() []byte {
	if m != nil {
		return m.PersistentVolume
	}
	return nil
}

func (m *SetVolumeIDRequest) GetVolumeID() string {
	if m != nil {
		return m.VolumeID
	}
	return ""
}

type SetVolumeIDResponse struct {
	PersistentVolume     []byte   `protobuf:"bytes,1,opt,name=persistentVolume,proto3" json:"persistentVolume,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetVolumeIDResponse) Reset()         { *m = SetVolumeIDResponse{} }
func (m *SetVolumeIDResponse) String() string { return proto.CompactTextString(m) }
func (*SetVolumeIDResponse) ProtoMessage()    {}
func (*SetVolumeIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_BlockStore_6f92edac81fcc1c8, []int{10}
}
func (m *SetVolumeIDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetVolumeIDResponse.Unmarshal(m, b)
}
func (m *SetVolumeIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetVolumeIDResponse.Marshal(b, m, deterministic)
}
func (dst *SetVolumeIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetVolumeIDResponse.Merge(dst, src)
}
func (m *SetVolumeIDResponse) XXX_Size() int {
	return xxx_messageInfo_SetVolumeIDResponse.Size(m)
}
func (m *SetVolumeIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetVolumeIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetVolumeIDResponse proto.InternalMessageInfo

func (m *SetVolumeIDResponse) GetPersistentVolume() []byte {
	if m != nil {
		return m.PersistentVolume
	}
	return nil
}

type UploadSnapshotRequest struct {
	Plugin               string   `protobuf:"bytes,1,opt,name=plugin,proto3" json:"plugin,omitempty"`
	VolumeID             string   `protobuf:"bytes,5,opt,name=volumeID,proto3" json:"volumeID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadSnapshotRequest) Reset()         { *m = UploadSnapshotRequest{} }
func (m *UploadSnapshotRequest) String() string { return proto.CompactTextString(m) }
func (*UploadSnapshotRequest) ProtoMessage()    {}
func (*UploadSnapshotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_BlockStore_6f92edac81fcc1c8, []int{11}
}
func (m *UploadSnapshotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadSnapshotRequest.Unmarshal(m, b)
}
func (m *UploadSnapshotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadSnapshotRequest.Marshal(b, m, deterministic)
}
func (dst *UploadSnapshotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadSnapshotRequest.Merge(dst, src)
}
func (m *UploadSnapshotRequest) XXX_Size() int {
	return xxx_messageInfo_UploadSnapshotRequest.Size(m)
}
func (m *UploadSnapshotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadSnapshotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UploadSnapshotRequest proto.InternalMessageInfo

func (m *UploadSnapshotRequest) GetPlugin() string {
	if m != nil {
		return m.Plugin
	}
	return ""
}

func (m *UploadSnapshotRequest) GetVolumeID() string {
	if m != nil {
		return m.VolumeID
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateVolumeRequest)(nil), "generated.CreateVolumeRequest")
	proto.RegisterType((*CreateVolumeResponse)(nil), "generated.CreateVolumeResponse")
	proto.RegisterType((*GetVolumeInfoRequest)(nil), "generated.GetVolumeInfoRequest")
	proto.RegisterType((*GetVolumeInfoResponse)(nil), "generated.GetVolumeInfoResponse")
	proto.RegisterType((*CreateSnapshotRequest)(nil), "generated.CreateSnapshotRequest")
	proto.RegisterMapType((map[string]string)(nil), "generated.CreateSnapshotRequest.TagsEntry")
	proto.RegisterType((*CreateSnapshotResponse)(nil), "generated.CreateSnapshotResponse")
	proto.RegisterType((*DeleteSnapshotRequest)(nil), "generated.DeleteSnapshotRequest")
	proto.RegisterType((*GetVolumeIDRequest)(nil), "generated.GetVolumeIDRequest")
	proto.RegisterType((*GetVolumeIDResponse)(nil), "generated.GetVolumeIDResponse")
	proto.RegisterType((*SetVolumeIDRequest)(nil), "generated.SetVolumeIDRequest")
	proto.RegisterType((*SetVolumeIDResponse)(nil), "generated.SetVolumeIDResponse")
	proto.RegisterType((*UploadSnapshotRequest)(nil), "generated.UploadSnapshotRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BlockStoreClient is the client API for BlockStore service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BlockStoreClient interface {
	Init(ctx context.Context, in *InitRequest, opts ...grpc.CallOption) (*Empty, error)
	CreateVolumeFromSnapshot(ctx context.Context, in *CreateVolumeRequest, opts ...grpc.CallOption) (*CreateVolumeResponse, error)
	GetVolumeInfo(ctx context.Context, in *GetVolumeInfoRequest, opts ...grpc.CallOption) (*GetVolumeInfoResponse, error)
	CreateSnapshot(ctx context.Context, in *CreateSnapshotRequest, opts ...grpc.CallOption) (*CreateSnapshotResponse, error)
	DeleteSnapshot(ctx context.Context, in *DeleteSnapshotRequest, opts ...grpc.CallOption) (*Empty, error)
	GetVolumeID(ctx context.Context, in *GetVolumeIDRequest, opts ...grpc.CallOption) (*GetVolumeIDResponse, error)
	SetVolumeID(ctx context.Context, in *SetVolumeIDRequest, opts ...grpc.CallOption) (*SetVolumeIDResponse, error)
	UploadSnapshot(ctx context.Context, in *UploadSnapshotRequest, opts ...grpc.CallOption) (*Empty, error)
}

type blockStoreClient struct {
	cc *grpc.ClientConn
}

func NewBlockStoreClient(cc *grpc.ClientConn) BlockStoreClient {
	return &blockStoreClient{cc}
}

func (c *blockStoreClient) Init(ctx context.Context, in *InitRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/generated.BlockStore/Init", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockStoreClient) CreateVolumeFromSnapshot(ctx context.Context, in *CreateVolumeRequest, opts ...grpc.CallOption) (*CreateVolumeResponse, error) {
	out := new(CreateVolumeResponse)
	err := c.cc.Invoke(ctx, "/generated.BlockStore/CreateVolumeFromSnapshot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockStoreClient) GetVolumeInfo(ctx context.Context, in *GetVolumeInfoRequest, opts ...grpc.CallOption) (*GetVolumeInfoResponse, error) {
	out := new(GetVolumeInfoResponse)
	err := c.cc.Invoke(ctx, "/generated.BlockStore/GetVolumeInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockStoreClient) CreateSnapshot(ctx context.Context, in *CreateSnapshotRequest, opts ...grpc.CallOption) (*CreateSnapshotResponse, error) {
	out := new(CreateSnapshotResponse)
	err := c.cc.Invoke(ctx, "/generated.BlockStore/CreateSnapshot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockStoreClient) DeleteSnapshot(ctx context.Context, in *DeleteSnapshotRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/generated.BlockStore/DeleteSnapshot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockStoreClient) GetVolumeID(ctx context.Context, in *GetVolumeIDRequest, opts ...grpc.CallOption) (*GetVolumeIDResponse, error) {
	out := new(GetVolumeIDResponse)
	err := c.cc.Invoke(ctx, "/generated.BlockStore/GetVolumeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockStoreClient) SetVolumeID(ctx context.Context, in *SetVolumeIDRequest, opts ...grpc.CallOption) (*SetVolumeIDResponse, error) {
	out := new(SetVolumeIDResponse)
	err := c.cc.Invoke(ctx, "/generated.BlockStore/SetVolumeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockStoreClient) UploadSnapshot(ctx context.Context, in *UploadSnapshotRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/generated.BlockStore/UploadSnapshot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BlockStoreServer is the server API for BlockStore service.
type BlockStoreServer interface {
	Init(context.Context, *InitRequest) (*Empty, error)
	CreateVolumeFromSnapshot(context.Context, *CreateVolumeRequest) (*CreateVolumeResponse, error)
	GetVolumeInfo(context.Context, *GetVolumeInfoRequest) (*GetVolumeInfoResponse, error)
	CreateSnapshot(context.Context, *CreateSnapshotRequest) (*CreateSnapshotResponse, error)
	DeleteSnapshot(context.Context, *DeleteSnapshotRequest) (*Empty, error)
	GetVolumeID(context.Context, *GetVolumeIDRequest) (*GetVolumeIDResponse, error)
	SetVolumeID(context.Context, *SetVolumeIDRequest) (*SetVolumeIDResponse, error)
	UploadSnapshot(context.Context, *UploadSnapshotRequest) (*Empty, error)
}

func RegisterBlockStoreServer(s *grpc.Server, srv BlockStoreServer) {
	s.RegisterService(&_BlockStore_serviceDesc, srv)
}

func _BlockStore_Init_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockStoreServer).Init(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/generated.BlockStore/Init",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockStoreServer).Init(ctx, req.(*InitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockStore_CreateVolumeFromSnapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateVolumeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockStoreServer).CreateVolumeFromSnapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/generated.BlockStore/CreateVolumeFromSnapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockStoreServer).CreateVolumeFromSnapshot(ctx, req.(*CreateVolumeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockStore_GetVolumeInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVolumeInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockStoreServer).GetVolumeInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/generated.BlockStore/GetVolumeInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockStoreServer).GetVolumeInfo(ctx, req.(*GetVolumeInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockStore_CreateSnapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSnapshotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockStoreServer).CreateSnapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/generated.BlockStore/CreateSnapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockStoreServer).CreateSnapshot(ctx, req.(*CreateSnapshotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockStore_DeleteSnapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSnapshotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockStoreServer).DeleteSnapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/generated.BlockStore/DeleteSnapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockStoreServer).DeleteSnapshot(ctx, req.(*DeleteSnapshotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockStore_GetVolumeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVolumeIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockStoreServer).GetVolumeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/generated.BlockStore/GetVolumeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockStoreServer).GetVolumeID(ctx, req.(*GetVolumeIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockStore_SetVolumeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetVolumeIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockStoreServer).SetVolumeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/generated.BlockStore/SetVolumeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockStoreServer).SetVolumeID(ctx, req.(*SetVolumeIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockStore_UploadSnapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadSnapshotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockStoreServer).UploadSnapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/generated.BlockStore/UploadSnapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockStoreServer).UploadSnapshot(ctx, req.(*UploadSnapshotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BlockStore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "generated.BlockStore",
	HandlerType: (*BlockStoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Init",
			Handler:    _BlockStore_Init_Handler,
		},
		{
			MethodName: "CreateVolumeFromSnapshot",
			Handler:    _BlockStore_CreateVolumeFromSnapshot_Handler,
		},
		{
			MethodName: "GetVolumeInfo",
			Handler:    _BlockStore_GetVolumeInfo_Handler,
		},
		{
			MethodName: "CreateSnapshot",
			Handler:    _BlockStore_CreateSnapshot_Handler,
		},
		{
			MethodName: "DeleteSnapshot",
			Handler:    _BlockStore_DeleteSnapshot_Handler,
		},
		{
			MethodName: "GetVolumeID",
			Handler:    _BlockStore_GetVolumeID_Handler,
		},
		{
			MethodName: "SetVolumeID",
			Handler:    _BlockStore_SetVolumeID_Handler,
		},
		{
			MethodName: "UploadSnapshot",
			Handler:    _BlockStore_UploadSnapshot_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "BlockStore.proto",
}

func init() { proto.RegisterFile("BlockStore.proto", fileDescriptor_BlockStore_6f92edac81fcc1c8) }

var fileDescriptor_BlockStore_6f92edac81fcc1c8 = []byte{
	// 550 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x55, 0xd1, 0x6e, 0xd3, 0x30,
	0x14, 0x95, 0x9b, 0x74, 0xa2, 0x77, 0x63, 0xaa, 0xdc, 0x76, 0x8a, 0x22, 0x51, 0x4a, 0x9e, 0xa6,
	0x3d, 0x54, 0x50, 0x1e, 0x98, 0x78, 0x40, 0x1a, 0x64, 0xa0, 0x0a, 0x24, 0xa4, 0x64, 0x43, 0x08,
	0x9e, 0x02, 0xf5, 0xba, 0x6a, 0x69, 0x6c, 0x62, 0x77, 0x52, 0x3f, 0x86, 0x7f, 0xe3, 0x0b, 0xf8,
	0x06, 0xdc, 0xc4, 0x6d, 0xed, 0xd6, 0x59, 0x27, 0xa4, 0xbd, 0xc5, 0xf7, 0xda, 0xe7, 0x9e, 0x73,
	0x7b, 0xee, 0x2d, 0x34, 0xdf, 0xa6, 0xf4, 0xe7, 0x4d, 0x2c, 0x68, 0x4e, 0xfa, 0x2c, 0xa7, 0x82,
	0xe2, 0xc6, 0x98, 0x64, 0x24, 0x4f, 0x04, 0x19, 0xf9, 0x07, 0xf1, 0x75, 0x92, 0x93, 0x51, 0x99,
	0x08, 0x7e, 0x23, 0x68, 0xbd, 0xcb, 0x89, 0xcc, 0x7c, 0xa1, 0xe9, 0x6c, 0x4a, 0x22, 0xf2, 0x6b,
	0x46, 0xb8, 0xc0, 0x47, 0xb0, 0xc7, 0xd2, 0xd9, 0x78, 0x92, 0x79, 0xa8, 0x87, 0x8e, 0x1b, 0x91,
	0x3a, 0xe1, 0x2e, 0x00, 0xcf, 0x12, 0xc6, 0xaf, 0xa9, 0x18, 0x86, 0x5e, 0xad, 0xc8, 0x69, 0x91,
	0x45, 0xfe, 0xb6, 0x00, 0xba, 0x98, 0x33, 0xe2, 0x39, 0x65, 0x7e, 0x1d, 0xc1, 0x3e, 0x3c, 0x2a,
	0x4f, 0x67, 0xdf, 0x3c, 0xb7, 0xc8, 0xae, 0xce, 0x18, 0x83, 0x3b, 0xa1, 0x8c, 0x7b, 0x75, 0x19,
	0x77, 0xa2, 0xe2, 0x3b, 0x18, 0x40, 0xdb, 0xa4, 0xc7, 0x19, 0xcd, 0xb8, 0x86, 0x23, 0x59, 0x20,
	0x1d, 0x67, 0x18, 0x06, 0x57, 0xd0, 0xfe, 0x40, 0x44, 0xf9, 0x60, 0x98, 0x5d, 0xd1, 0x5d, 0x9a,
	0x74, 0xac, 0x9a, 0x89, 0x65, 0xf0, 0x75, 0x4c, 0xbe, 0xc1, 0x47, 0xe8, 0x6c, 0xd4, 0x51, 0xe4,
	0xcc, 0x26, 0xa0, 0xad, 0x26, 0x2c, 0x85, 0xd6, 0x34, 0xa1, 0x7f, 0x10, 0x74, 0x4a, 0xa5, 0xb1,
	0xea, 0xe6, 0x03, 0xd1, 0xc6, 0x6f, 0xc0, 0x15, 0xc9, 0x98, 0xcb, 0xf6, 0x3b, 0xc7, 0xfb, 0x83,
	0x93, 0xfe, 0xca, 0x1a, 0x7d, 0x6b, 0xfd, 0xfe, 0x85, 0xbc, 0x7c, 0x9e, 0x89, 0x7c, 0x1e, 0x15,
	0xef, 0xfc, 0x57, 0xd0, 0x58, 0x85, 0x70, 0x13, 0x9c, 0x1b, 0x32, 0x57, 0xcc, 0x16, 0x9f, 0xb8,
	0x0d, 0xf5, 0xdb, 0x24, 0x9d, 0x11, 0xc5, 0xa9, 0x3c, 0xbc, 0xae, 0x9d, 0xa2, 0xe0, 0x14, 0x8e,
	0x36, 0x2b, 0xac, 0x1b, 0xa6, 0xb9, 0x0a, 0x6d, 0xba, 0x2a, 0xf8, 0x0c, 0x9d, 0x90, 0xa4, 0xe4,
	0xfe, 0xbd, 0xd9, 0x61, 0xd3, 0xe0, 0x2b, 0xe0, 0xf5, 0x4f, 0x17, 0xee, 0x42, 0x3b, 0x81, 0x26,
	0x23, 0x39, 0x9f, 0x70, 0x41, 0x32, 0xf5, 0xa8, 0xc0, 0x3c, 0x88, 0xb6, 0xe2, 0xc1, 0x0b, 0x68,
	0x19, 0xc8, 0xf7, 0xf0, 0xab, 0x00, 0x1c, 0x3f, 0x08, 0x19, 0xa3, 0xaa, 0xb3, 0x51, 0xf5, 0x0c,
	0x5a, 0xb1, 0x85, 0xa8, 0x0d, 0x1e, 0x55, 0x68, 0x95, 0x03, 0x70, 0xc9, 0x52, 0x9a, 0x8c, 0xfe,
	0xc7, 0xb2, 0x75, 0x93, 0xcf, 0xe0, 0xaf, 0x0b, 0xb0, 0xde, 0x5b, 0xf8, 0x39, 0xb8, 0xc3, 0x6c,
	0x22, 0xa1, 0x34, 0x7f, 0x2e, 0x02, 0xaa, 0x84, 0xdf, 0xd4, 0xe2, 0xe7, 0x53, 0x26, 0xe6, 0xf8,
	0x3b, 0x78, 0xfa, 0xaa, 0x78, 0x9f, 0xd3, 0xe9, 0x92, 0x17, 0xee, 0x6e, 0xb9, 0xdc, 0x58, 0x77,
	0xfe, 0xd3, 0xca, 0xbc, 0x6a, 0x4b, 0x04, 0x8f, 0x8d, 0x59, 0xc7, 0xfa, 0x0b, 0xdb, 0xb6, 0xf1,
	0x7b, 0xd5, 0x17, 0x14, 0xe6, 0x25, 0x1c, 0x9a, 0xf3, 0x80, 0x7b, 0xbb, 0x86, 0xd1, 0x7f, 0x76,
	0xc7, 0x0d, 0x05, 0x1b, 0xc2, 0xa1, 0x39, 0x2c, 0x06, 0xac, 0x75, 0x8e, 0x2c, 0xdd, 0xfc, 0x04,
	0xfb, 0x9a, 0x8f, 0xf1, 0x13, 0xab, 0x9a, 0xa5, 0x59, 0xfd, 0x6e, 0x55, 0x5a, 0x71, 0x92, 0x68,
	0x71, 0x05, 0x5a, 0x7c, 0x37, 0x9a, 0xcd, 0xa3, 0x52, 0xa1, 0xe9, 0x3b, 0x43, 0xa1, 0xd5, 0x92,
	0xdb, 0x0a, 0x7f, 0xec, 0x15, 0xff, 0x80, 0x2f, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0xe5, 0x43,
	0xd6, 0x58, 0x2e, 0x07, 0x00, 0x00,
}
